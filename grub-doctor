#!/usr/bin/env bash
# based on SalineOS GrubDoctor
LC_ALL=C
trap "rm -f /run/$(basename $0).pid; exit" INT TERM EXIT
echo "$BASHPID" > /run/$(basename $0).pid
source /usr/bin/variables
nolive_check
mkdir -p /tmp/remmnt/Target
Arch1="$(file /usr/bin/file | awk '{print $3}')"
Drives=$(cat /proc/partitions | grep -v loop | grep -v "^$" | grep -v sr | grep -v name | grep -v zram | awk '{ print $4}')
GrubDir="/tmp/remmnt/Target"
GrubLocation=""
Info='yad --text-align=fill --borders=6 --skip-taskbar --sticky --center --title="Grub Doctor" --window-icon=/usr/share/pixmaps/grub-doctor.png'
Question='yad --timeout=10 --text-align=fill --borders=6 --skip-taskbar --sticky --wrap --center --image=gtk-dialog-question --button=gtk-no:1 --button=Si:0 --title="Grub Doctor" --window-icon=/usr/share/pixmaps/grub-doctor.png'

no_requisitos (){
	$Info --text="La instalacion de Linux en su disco no cumple con los requisitos para continuar la operacion." --button=$"gtk-ok:1"
	killtail
	exit 1
}

killtail (){
	TailPID=$(pgrep -f "tail -f /usr/bin/grub-doctor")
	kill $TailPID
	killall yad
}

conexion (){
	ping -c 3 google.com
	if [[ $? = 0 ]]; then
		conex="1"
	else
		conex="0"
	fi

	if [ "$conex" = "1" ]; then
		if [[ -f /tmp/remmnt/Target/usr/bin/apt-get ]]; then
			miapt="1"
		else
			miapt="0"
		fi
	fi
}

pre_ch (){
	mount -o bind /proc $GrubDir/proc
	mount -o bind /dev  $GrubDir/dev
	mount -o bind /sys  $GrubDir/sys
}

post_ch (){
	umount -fl $GrubDir/proc
	umount -fl $GrubDir/dev
	umount -fl $GrubDir/sys
}

mi_install (){
	conexion
	if [ "$miapt" = "1" ]; then
		$Info --text="Se ha detectado que la instalacion de Linux en el disco no cuenta con las herramientas necesarias, ¿desea instalarlas?" --button=Aceptar:0 --button=Cancelar:1
		if [[ $? = 0 ]]; then
			pre_ch
			chroot $GrubDir apt-get -q update
			chroot $GrubDir apt-get install grub2 file
			post_ch
		else
			no_requisitos
		fi
	else
		no_requisitos
	fi
}

comprobacion (){
	if [[ -f /tmp/remmnt/Target/usr/bin/burg-mkimage ]]; then
		conexion
		if [ "$miapt" = "1" ]; then
			$Info --text="Se ha detectado BURG en su instalacion de Linux en disco, ¿desea reemplazarlo?" --button=Aceptar:0 --button=Cancelar:1
			if [[ $? = 0 ]]; then
				pre_ch
				chroot $GrubDir apt-get -y purge burg burg-common burg-emu burg-pc burg-themes burg-themes-common
				chroot $GrubDir apt-get -q update
				chroot $GrubDir apt-get -y --force-yes install grub2 file
				post_ch
			else
				no_requisitos
			fi
		else
			no_requisitos
		fi
	fi

	if [[ -f /tmp/remmnt/Target/usr/bin/file ]]; then
		Arch2="$(file /tmp/remmnt/Target/usr/bin/file | awk '{print $3}')"
	else
		mi_install
	fi

	if ! [[ -f /tmp/remmnt/Target/usr/sbin/grub-install ]]; then
		mi_install
	fi
}

$Question --width=200 --text="Esta aplicacion restaurara GRUB en su sistema. (No compatible con sistemas EFI) ¿Desea continuar?"

if [[ $? != 0 ]]; then
	exit 1
fi

for i in $Drives; do
	PartDrive="$i"
	PartDriveSize=$(grep -m 1 "$i" /proc/partitions | awk '{print $3}')
	if [ "$(echo "$PartDrive" | grep [0-9] )" != "" ]; then
		if [ "$PartDriveMenu" = "" ]; then
			PartDriveMenu=("$PartDrive")
		else
			PartDriveMenu=("${PartDriveMenu[@]}" "$PartDrive")
		fi
	fi
	if [ "$(echo "$PartDrive" | grep [0-9] )" = "" ]; then
		GrubMenu=("${GrubMenu[@]}" "$PartDrive" "MBR del disco")
	fi
done

GrubMenu=("${GrubMenu[@]}" "root" "Particion raiz (avanzado)")

GetRootPart (){
	RootPart=$(yad --text-align=fill --borders=6 --sticky --no-click --center --height="300" --list --window-icon="/usr/share/pixmaps/grub-doctor.png" --title="Grub Doctor" --column="Nombre" --button="Salir":3 --button=$"gtk-ok:2" --text="Seleccione la particion raiz del sistema que desea reparar." "${PartDriveMenu[@]}")
	ret="$?"

	if [ "$ret" = "3" ]; then
		$Question --text="¿Esta seguro de querer cancelar la instalacion?"
	  	if [[ $? = 0 ]]; then
	   		exit 1
		else
	   		GetRootPart
		fi
	elif [ "$ret" = "252" ]; then
		GetRootPart
	elif [ "$RootPart" = "" ]; then
		$Info --text="No selecciono una particion, intente de nuevo." --button=$"gtk-ok:1"
		GetRootPart
	fi
	RootPart=$(echo "$RootPart" | awk -F '|' '{print $1}')
}

GetRootPart

GetGrubLocation (){
	GrubLocation=$(yad --text-align=fill --borders=6 --sticky --no-click --center --list --window-icon="/usr/share/pixmaps/grub-doctor.png" --title="Grub Doctor" --column="Nombre" --column="Descripcion" --height="300" --width="275" --wrap --button="Salir":3 --button=$"gtk-ok:2" --text="   Seleccione donde se instalara grub.   \n" "${GrubMenu[@]}")

	ret="$?"

	if [ "$ret" = "3" ]; then
		$Question --text="¿Esta seguro de querer cancelar la instalacion?"
		if [[ $? = 0 ]]; then
			exit 1
		else
			GetGrubLocation
		fi
	elif [ "$ret" = "252" ]; then
		$Question --text="¿Esta seguro de querer cancelar la instalacion?"
		if [[ $? = 0 ]]; then
			exit 1
		else
			GetGrubLocation
		fi
	elif [ "$GrubLocation" = "" ]; then
		$Info --text="No selecciono ninguna ubicacion, intente de nuevo." --button=$"gtk-ok:1"
		GetGrubLocation
	fi

	GrubLocation=$(echo "$GrubLocation" | awk -F '|' '{print $1}')

	if [ "$GrubLocation" = "root" ]; then
		GrubLocation="/dev/$RootPart"
	else
		GrubLocation="/dev/$GrubLocation"
	fi
}

GetGrubLocation

$Question --text="Grub se instalara en "$GrubLocation"\n\n¿Desea continuar con la operacion?"

if [ "$?" = "1" ]; then
	$Info --text="Operacion cancelada" --button=$"gtk-ok:1"
	exit 1
fi

tail -f /usr/bin/grub-doctor | yad --skip-taskbar --sticky --center --pulsate --progress --auto-kill --title="Grub Doctor" --no-buttons --window-icon=/usr/share/pixmaps/grub-doctor.png --progress-text="Instalando grub...Por favor espere" &

GrubTest1=$(mount | grep ' / ')
GrubTest2=$(blkid /dev/"$RootPart" | awk -F 'UUID="' '{print $2}' | awk -F '"' '{print $1}')
GrubTest3=$(echo "$GrubTest1" | grep "$GrubTest2")

if [ "$GrubTest3" = "" ]; then
	umount -fl "$GrubDir"
	umount -fl /dev/$RootPart
	sleep 2
	mount /dev/$RootPart $GrubDir -o rw

	if [ "$(mount | grep /dev/$RootPart | awk '{print $3}')" != "/tmp/remmnt/Target" ]; then
		if [ "$GrubTest3" = "" ]; then
			yad --text-align=fill --borders=6 --width="250" --wrap --window-icon="/usr/share/pixmaps/grub-doctor" --title="Grub Doctor" --text="Fallo al montar $RootPart, asegurese de que no haya archivos en uso en la particion." --button="Salir":1
			killtail
			exit 1
		fi
	fi

	comprobacion

	if [ "$Arch1" != "$Arch2" ]; then
		yad --text-align=fill --borders=6 --width="250" --wrap --window-icon="/usr/share/pixmaps/grub-doctor" --title="Grub Doctor" --text="La arquitectura de la sesion Live es diferente a la del sistema que desea recuperar. Para restaurar grub para $RootPart usted necesitara ejecutar Grub Doctor desde un sistema $Arch2" --button="Salir":1
		umount -fl /tmp/remmnt/Target
		killtail
		exit 1
	fi
 
	pre_ch
 
	chroot $GrubDir grub-install --recheck --force --no-floppy "$GrubLocation"
	chroot $GrubDir update-grub2

	post_ch
else
	grub-install --recheck --no-floppy --force "$GrubLocation"
	update-grub
fi

umount -fl /tmp/remmnt/Target
killtail
$Info --text="             Instalacion de grub finalizada.             \n" --button=$"gtk-ok:1"
rm -f /run/$(basename $0).pid
trap - INT TERM EXIT
exit 0
